@using Shop.BLL.Utils
@using PVT.Q1._2017.Shop.Areas.Content.Extentions
@using PVT.Q1._2017.Shop.Helpers
@using Shop.Infrastructure.Enums
@model Shop.Infrastructure.Models.PagedResult<Shop.Common.ViewModels.TrackViewModel>
    
@{
    bool isAuthenticated = Request.IsAuthenticated;
    int currentUserId = 0;
    bool isAdmin = false;
    bool isSeller = false;
    bool isBuyer = false;
    if (isAuthenticated)
    {
        var currentUser = ((CurrentUser) User);
        currentUserId = currentUser.Id;
        isAdmin = User.IsInRole(UserRoles.Admin.ToString());
        isSeller = User.IsInRole(UserRoles.Seller.ToString());
        isBuyer = User.IsInRole(UserRoles.Buyer.ToString()) || User.IsInRole(UserRoles.Customer.ToString());
    }
}

<table class="table table-hover table-responsive">
    @foreach (var track in Model.Items)
    {
        <tr>
            <td>
                @Html.ActionLink(track.Name, "Details", "Track", new
                {
                    id = track.Id,
                    area = "Content"
                }, new
                {
                    @class = "btn btn-link",
                    title = "Нажмите, чтобы посмотреть подробную информацию о треке"
                })
            </td>
            <td>
                @Html.ActionLink(track.Artist.Name, "Details", "Artist", new
                {
                    id = track.Artist.Id,
                    area = "Content"
                }, new
                {
                    @class = "btn btn-link",
                    title = "Нажмите, чтобы перейти к информации об исполнителе"
                })
            </td>
            <td>
                @Html.Partial("_Rating", track.Rating)
            </td>
            <td>
                @Html.DisplayFor(m => track.Price)
            </td>
            @if (isAuthenticated)
            {
                if (isAdmin || (isSeller && (track.OwnerId <= 0m || track.OwnerId == currentUserId)))
                {
                    if (track.AlbumId > 0m)
                    {
                        <td>
                            @using (Html.BeginForm("RemoveTrack", "Album", new { area = "Management" }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()
                                <input type="hidden" value="@track.AlbumId" name="id"/>
                                <input type="hidden" value="@track.Id" name="trackId"/>
                                <input type="submit" value="Удалить из альбома" class="btn btn-sm btn-primary"/>
                            }
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.BtnEditTrack(track.Id)
                            @Html.BtnDeleteTrack(track.Id)
                            @(track.Price != null ? Html.BtnEditTrackPrice(track.Id) : Html.BtnCreateTrackPrice(track.Id))
                        </td>
                    }
                }
                else if (isBuyer)
                {
                    <td>
                        @if (track.IsPurchased)
                        {
                            @Html.ButtonWithIcon("btn btn-sm btn-default", "glyphicon glyphicon-music", "Прослушать",
                                                 Url.Action("PurchasedTracks", "Track", new { area = "Content", id = track.Id }))
                        }
                        else if (track.Price != null)
                        {
                            @Html.BtnBuyTrack(track.Id, track.IsOrdered)
                        }
                    </td>
                }
            }
        </tr>
    }
</table>

@Html.PageLinks(Model, i => Url.Action("List", "Track", new { id = i, area = "List" }))