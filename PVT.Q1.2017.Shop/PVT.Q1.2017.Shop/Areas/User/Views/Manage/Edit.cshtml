@model Shop.Common.ViewModels.UserEditView

@{
    ViewBag.Title = "Редактирование пользователей";
}

<div class="user-edit-center">
    @using (Html.BeginForm("Update", "Manage", new { area = "User" }, FormMethod.Post, null))
    {
    @Html.AntiForgeryToken()

        <div class="form-horizontal" id="user-edit-form">
            <hr/>
            @Html.ValidationSummary(true, string.Empty, new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Login, new { htmlAttributes =new { @class = "form-control", @readonly= "readonly" } } )
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes =new { @class = "form-control", @readonly= "readonly" } })
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Sex, "Мужской") Мужской
                @Html.RadioButtonFor(model => model.Sex, "Женский") Женский
                @Html.RadioButtonFor(model => model.Sex, "не указано", new { hidden = "hidden" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UserRole, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.UserRole, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UserRole, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control",  @type = "text", @id = "input2", placeholder = "дд.мм.гггг", data_val_date ="Не валидный формат даты (дд.мм.гггг)" } })
                @Html.ValidationMessageFor(model => model.BirthDate, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryId, ViewBag.Countries as SelectList, string.Empty, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryName, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", id = "phone"} })
                    @Html.ValidationMessageFor(model => model.PhoneNumber, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
                <div class="email-confirmed">
                    @Html.LabelFor(model => model.ConfirmedEmail)
                    @Html.EditorFor(model => model.ConfirmedEmail)
                    @Html.ValidationMessageFor(model => model.ConfirmedEmail, string.Empty, new { @class = "text-danger" })
            </div>
        </div>
            <input type="submit" value="Сохранить" name="userEdit" class="btn btn-primary" id="user-edit-savebtn"/>
            </div>
    }
</div>


@section scripts{

    @System.Web.Optimization.Scripts.Render("~/bundles/jqueryval")

    @System.Web.Optimization.Scripts.Render("~/bundles/inputmask")

    <script>
        $(document).ready(function () {
            $("#phone").inputmask("+(999 99)999-99-99");
            $("#input2").inputmask("99.99.9999");

        });
    </script>
}