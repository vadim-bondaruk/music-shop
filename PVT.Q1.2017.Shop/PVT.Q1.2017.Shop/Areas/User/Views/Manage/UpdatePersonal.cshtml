@model PVT.Q1._2017.Shop.ViewModels.UserPersonalViewModel

@{
    ViewBag.Title = "Редактировать личные данные";
}

<h3>@ViewBag.Message</h3>

<input type="button" class="btn" value="Редактировать данные профиля" onclick="location.href='@Url.Action("UpdatePersonal", "Manage", new { area = "User"})'" />
<input type="button" class="btn" value="Изменить пароль" onclick="location.href='@Url.Action("ChangePassword", "Manage", new { area = "User"})'" />
<input type="button" class="btn" value="Изменить логин" onclick="location.href='@Url.Action("ChangeLogin", "Manage", new { area = "User"})'" />
<input type="button" class="btn" value="Удалить аккаунт" onclick="location.href='@Url.Action("DeleteCurrentUserMessage", "Manage", new { area = "User"})'" />


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="user-reg form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.RadioButtonFor(model => model.Sex, "Мужской") Мужской
                @Html.RadioButtonFor(model => model.Sex, "Женский") Женский
                @Html.RadioButtonFor(model => model.Sex, "не указано", new { hidden = "hidden" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control datecontrol", type = "text", placeholder = "dd.mm.yy" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CountryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryId, ViewBag.Countries as SelectList, "Plese select the country", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CountryId, string.Empty, new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", @id = "input1", placeholder = "+(555 55)555-55-55" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("На главную", "Index", new { area = "", controller = "Home" })
</div>


@section scripts{

@System.Web.Optimization.Scripts.Render("~/bundles/jqueryval")

@System.Web.Optimization.Scripts.Render("~/bundles/inputmask")

<script>
        $(document).ready(function () {
            $("#input1").inputmask("+(999 99)999-99-99");
        });
</script>
}
